function TxtChg()
{
    /*document.getElementById("titre").innerHTML = "6 - Architectures matérielles et systèmes d'exploitation";
    document.getElementById("h1_titre").innerHTML = "6 - Architectures matérielles et systèmes d'exploitation";*/
    document.getElementById("conteneur").innerHTML = 
    "<div class='content'>\
        <h3 id='h3_titre'></h3>\
        <div id='sous_content'></div>\
    </div>";
}

function Cl1()
{
    /*document.getElementById("h1_titre").innerHTML = "4 - Les interfaces en ligne de commande";
    document.getElementById("h3_titre").innerHTML = "Explications";*/
    document.getElementById("sous_content").innerHTML = 
    "Pour interagir avec l'utilisateur, les OS ont une interface graphique (comme par exemple Windows), et une interface en ligne \
    de commande pour saisir en texte les commandes que le système d'exploitation doit effectuer.\
    <br><br>\
    Avec Linux, comme dans Windows, les données sont stockées dans des fichiers, eux-mêmes contenus dans des dossiers appelé \
    <em>répertoires</em>.\
    <br>\
    En revanche, il n'existe pas de notions de 'disque' sous Linux. L'organisation des principaux fichiers et répertoires \
    appelée <em>arborescence</em> est représentée en version simplifiée ci-dessous.\
    <br><br>\
    <figure>\
        <img src='img/arbo_linux.jpg'/>\
        <figcaption>Représentation d'un système de fichier sur Raspberry Pi</figcaption>\
    </figure>";
}

function Cl2()
{
    /*document.getElementById("h1_titre").innerHTML = "4 - Les interfaces en ligne de commande";
    document.getElementById("h3_titre").innerHTML = "Activité 1";*/
    document.getElementById("sous_content").innerHTML = 
    "Dans le système de fichiers de Linux, tous les répertoires nécessaires au fonctionnement du système d'exploitation (dev, etc, ...) \
    sont accessibles depuis le répertoire racice '/'.\
    <br>\
    Les répertoires des deux utilisateurs de cette machine sont situés dans le répertoire 'home', ici: Martin et Lisa. Attention \
    Linux est sensible à la casse, donc il faut être vigilent sur les éventuelles majuscules / minuscules.\
    <br>\
    Pour naviguer dans le système de fichiers, nous devons définir les <em>chemins absolus</em> et <em>relatifs</em>.\
    <br>\
    Un chemin d'accès <em>absolu</em> part toujours du répertoire racine '/' suivi de la suite du ou des nom(s) de répertoire(s) \
    jusqu'à la destination, séparé(s) par des '/'.\
    <br>\
    Exemple de chemin absolu vers le répertoire de Lisa: /home/lisa\
    <br><br>\
    - Ecrire le chemin absolu vers le répertoire <em>videos</em> de martin.\
    <br>\
    <input type='text' id='abr_lin'>\
    <br>\
    Lorsque l'on se déplace dans l'arborescence de fichiers, le répertoire dans lequel on se situe s'appelle le <em>répertoire courant</em>.\
    <br>\
    Un <em>chemin relatif</em> fait référence au répertoire courant et donne la liste des noms du ou des répertoires(s) jusqu'à la \
    destination, séparés par des '/'.\
    <br>\
    Exemple de chemin relatif vers le répertoire images de martin, depuis son répertoire: martin/images.\
    <br><br>\
    - Ecrire le chemin relatif vers le répertoire videos de martin, à partir du répertoire home.\
    <br>\
    <input type='text' id='abr_lin'>\
    <br>\
    Pour remonter d'un niveau dans l'arborescence de fichiers, il faut utiliser: '..'\
    <br>\
    Exemple de chemin relatif du répertoire lisa depuis le répertoire martin: ../lisa.\
    <br><br>\
    - Ecrire le chemin relatif vers le répertoire lib à partir du répertoire courant videos.\
    <br>\
    <input type='text' id='abr_lin'>";
}

function Cl3()
{
    /*document.getElementById("h1_titre").innerHTML = "4 - Les interfaces en ligne de commande";
    document.getElementById("h3_titre").innerHTML = "Activité 2";*/
    document.getElementById("sous_content").innerHTML = 
    "Pour manipuler les commandes Linux, nous allors utiliser un émulateur d'ordinateur. L'<em>interface \
    en ligne de commande</em> va nous permettre d'interagir avec un véritable système d'exploitation Linux.\
    Pour ce faire, rendez-vous <a href='https://bellard.org/jslinux/' target='_blank'>ici</a>.\
    <br>\
    Prenez la première version: <img src='img/version_a_prendre.png'/ width='400px' height='200px'>, puis 'click here', enfin, \
    attendre le chargement complet.\
    <br><br>\
    La commande 'ls' pour 'list' (en anglais) permet d'afficher la liste des répertoires et des fichiers dans le répertoire courant.\
    <br>\
    Testez la.\
    <br><br>\
    La commande 'pwd' pour 'print working directory' permet d'afficher le répertoire courant.\
    <br>\
    Testez la.\
    <br><br>\
    La commande 'cd' pour 'change directory' permet de changer de répertoire courant.\
    Testez la commande suivante: 'cd ..' puis faites un 'ls'\
    <br><br>\
    Retournez dans le dossier 'root', puis grace à la commande 'cat' pour 'catenate' (en anglais), afficher le contenu du fichier 'readme.txt'\
    ";
}

function Cl4()
{
    /*document.getElementById("h1_titre").innerHTML = "4 - Les interfaces en ligne de commande";
    document.getElementById("h3_titre").innerHTML = "Activité 3";*/
    document.getElementById("sous_content").innerHTML = 
    "La commande 'mkdir' pour 'make directory' permet de créer un répertoire dans le répertoire courant.\
    <br>\
    Tester la commande 'mkdir test-nsi'. Visualiser le résultat.\
    <br><br>\
    Il est également possible de créer un répertoire dans un autre répertoire en donnant son chemin relatif ou absolu.\
    <br>\
    Créer un dossier 'test_1' et un dossier 'test_2' dans le dossier 'test-nsi'.\
    <br><br>\
    La commande 'mv' pour 'move' permet de déplacer et/ou renommer des fichiers et des répertoires. Elle fonctionne de la façon suivante:\
    <br>\
    mv source destination\
    <br>\
    - source est le repertoire d'où vient le fichier / dossier\
    <br>\
    - destination est le répertoire où envoyer le fichier / dossier\
    <br>\
    Utiliser cette commande pour mettre le dossier 'test_2' créée précédement pour le déplacer dans le dossier 'test_1'\
    <br><br>\
    La commande 'cp' pour 'copy' fonctionne de la même façon que la commande 'mv', mais pour copier un fichier / dossier.\
    <br>\
    Dans le répertoire courant, crééer un dossier 'NSI' en faire une copie et le mettre dans le dossier 'test_2'.\
    <br><br>\
    La commande 'rm' pour 'remove' permet de supprimer un fichier, elle s'utilise de la manière suivante:\
    <br>\
    rm chemin/nom_du_fichier.\
    <br><br>\
    La commande 'man' sert à voir la documentation d'une commande, pour cela, il suffit de taper 'man nom_de_commande'.\
    <br>\
    Tester la commande 'man' sur les commandes vues précédemment.\
    <br><br>\
    Pour finir, veuillez regarder \
    <a href='https://doc.ubuntu-fr.org/permissions#:~:text=Sous%20Nautilus%20(Ubuntu)%2C%20faites,vous%20dans%20l'onglet%20permissions.\
    &text=Pour%20le%20Propri%C3%A9taire%20et%20le,et%20%C3%A9criture%20ou%20lecture%20seule.' target='_blank'>cette page</a> sur les droits \
    et permissions d'accès sous Linux.";
}
